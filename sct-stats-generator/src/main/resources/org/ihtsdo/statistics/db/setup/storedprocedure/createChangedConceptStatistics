drop procedure if exists createChangedConceptStatistics;

CREATE PROCEDURE createChangedConceptStatistics(releaseDate INTEGER)
 MODIFIES SQL DATA
 BEGIN ATOMIC
 
declare statedCh INTEGER;
declare inferredCh INTEGER;
declare vprim2SD INTEGER;
declare vSD2Prim INTEGER;
declare descrCh INTEGER;
declare vFsnCh INTEGER;
declare vAnyCh INTEGER;
declare totCpt INTEGER;


select count(*) into totCpt
from s_concepts c;

truncate table actConcepts;

-- insert into testtime values (1,'actConcepts' , CURRENT_TIMESTAMP);
insert into actConcepts 
select c.id ,c.definitionStatusId
from s_concepts c
where c.active=1
and exists (
	select 0 
	from s_concepts_pre pc
	where pc.id=c.id) ;
-- insert into testtime values (2,'actConcepts' , CURRENT_TIMESTAMP);

truncate table cptRootLevel_table4;

-- insert into testtime values (1,'cptRootLevel_table4' , CURRENT_TIMESTAMP);
insert into cptRootLevel_table4 
values ( 138875005, 'SNOMED CT Concept (SNOMED RT+CTV3)'  , cast(0 as integer) , cast(0 as integer) 
,cast(0 as integer) , cast(0 as integer) ,cast(0 as integer) 
,cast(0 as integer),cast(0 as integer) );

-- insert into testtime values (2,'cptRootLevel_table4' , CURRENT_TIMESTAMP);



truncate table statedChanges;
truncate table inferredChanges ;

insert into statedChanges 
				select distinct a.id,case a.definitionStatusId 
					when 900000000000074008 then 1
					else 0 end case
				from actConcepts a inner join s_statedrels r
				on r.sourceId=a.id
				where r.effectiveTime=releaseDate;
				
				
insert into inferredChanges 
				select distinct a.id,case a.definitionStatusId 
					when 900000000000074008 then 1
					else 0 end case
				from actConcepts a inner join s_relationships r
				on r.sourceId=a.id
				where r.effectiveTime=releaseDate;

-- insert into testtime values (1,'descCh' , CURRENT_TIMESTAMP);


-- insert into testtime values (1,'statedCh and inferredCh' , CURRENT_TIMESTAMP);
select count(*) into statedCh
from statedChanges;

Update cptRootLevel_table4
set StatedDefChange=statedCh;

select count(*) into inferredCh
from inferredChanges;

Update cptRootLevel_table4
set InferredDefChange=inferredCh;

truncate table prim2SD ;

-- insert into testtime values (2,'statedCh and inferredCh' , CURRENT_TIMESTAMP);
-- insert into testtime values (1,'prim2SD' , CURRENT_TIMESTAMP);
insert into prim2SD
select pc.id ,0
from s_concepts_pre pc
where pc.definitionStatusId=900000000000074008
and exists(select 0 
			from actConcepts ac
			where ac.id=pc.id
			and ac.definitionStatusid=900000000000073002);

-- insert into testtime values (2,'prim2SD' , CURRENT_TIMESTAMP);

select count(*) into vprim2SD
from prim2SD;

Update cptRootLevel_table4
set Primitive2SD =vprim2SD;


truncate table SD2prim ;
-- insert into testtime values (1,'SD2prim' , CURRENT_TIMESTAMP);
insert into SD2prim 
select pc.id, 1
from s_concepts_pre pc
where pc.definitionStatusId=900000000000073002
and exists(select 0 
			from actConcepts ac
			where ac.id=pc.id
			and ac.definitionStatusid=900000000000074008);

-- insert into testtime values (2,'SD2prim' , CURRENT_TIMESTAMP);
select count(*) into vSD2Prim
from SD2prim;

Update cptRootLevel_table4
set SD2Primitive = vSD2Prim;

truncate table descCh ;

-- insert into testtime values (1,'descCh' , CURRENT_TIMESTAMP);
insert into descCh
select distinct c.id,case c.definitionStatusId 
		when 900000000000074008 then 1
		else 0 end case
	from actConcepts c
	inner join s_descriptions d
	on d.conceptId=c.id
	where d.conceptId=c.id and d.effectivetime=releaseDate;

-- insert into testtime values (2,'descCh' , CURRENT_TIMESTAMP);

select count(*) into descrCh
from descCh;

Update cptRootLevel_table4
set DescriptionChange = descrCh;
		
truncate table fsnCh ;

-- insert into testtime values (1,'fsnCh' , CURRENT_TIMESTAMP);
insert into fsnCh 				
select distinct c.id,d.term + ' -Prev.FSN: ' + d2.term,case c.definitionStatusId 
		when 900000000000074008 then 1
		else 0 end case
	from actConcepts c
	inner join s_descriptions d
	on d.conceptId=c.id
	and d.effectivetime=releaseDate and d.typeId=900000000000003001 and d.active=1
	inner join s_descriptions d2
	on d2.conceptId=c.id
	and d2.effectivetime=releaseDate and d2.typeId=900000000000003001 and d2.active=0
	where d.conceptId=c.id and d.effectivetime=releaseDate and d.typeId=900000000000003001 and d.active=1
	and d2.conceptId=c.id and d2.effectivetime=releaseDate and d2.typeId=900000000000003001 and d2.active=0;

-- insert into testtime values (2,'fsnCh' , CURRENT_TIMESTAMP);


truncate table actConcepts;

select count(*) into vFsnCh
from fsnCh;

Update cptRootLevel_table4
set FSNChange = vFsnCh;


truncate table anyCh ;

-- insert into testtime values (1,'anyCh' , CURRENT_TIMESTAMP);
insert into anyCh 
	select id from statedChanges
	union
	select id from inferredChanges
	union
	select id from prim2SD
	union
	select id from SD2prim
	union
	select id from descCh;

-- insert into testtime values (2,'anyCh' , CURRENT_TIMESTAMP);

select count(*) into vAnyCh
from anyCh ;

Update cptRootLevel_table4
set AnyChange = vAnyCh;


truncate table cptFirstLevel_table4;

-- insert into testtime values (1,'cptFirstLevel_table4' , CURRENT_TIMESTAMP);
insert into cptFirstLevel_table4
select r.sourceId as id, r.term , cast(0 as integer) as AnyChange, cast(0 as integer) as StatedDefChange
,cast(0 as integer) as InferredDefChange, cast(0 as integer) as Primitive2SD,cast(0 as integer) as SD2Primitive
,cast(0 as integer) as DescriptionChange,cast(0 as integer) as FSNChange 
from s_statedrootdesc r;

-- insert into testtime values (2,'cptFirstLevel_table4' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'StatedDefChange' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table4
set StatedDefChange=(select count(*) 
					from statedChanges c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);

-- insert into testtime values (2,'StatedDefChange' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'InferredDefChange' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table4
set InferredDefChange =(select count(*) 
					from inferredChanges c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);
-- insert into testtime values (2,'InferredDefChange' , CURRENT_TIMESTAMP);


-- insert into testtime values (1,'Primitive2SD' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table4
set Primitive2SD =(select count(*) 
					from prim2SD c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);
-- insert into testtime values (2,'Primitive2SD' , CURRENT_TIMESTAMP);


-- insert into testtime values (1,'SD2Primitive' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table4
set SD2Primitive =(select count(*) 
					from SD2prim c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);
-- insert into testtime values (2,'SD2Primitive' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'DescriptionChange' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table4
set DescriptionChange =(select count(*) 
					from descCh c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);

-- insert into testtime values (2,'DescriptionChange' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'FSNChange' , CURRENT_TIMESTAMP);

Update cptFirstLevel_table4
set FSNChange =(select count(*) 
					from fsnCh c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);

-- insert into testtime values (2,'FSNChange' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'AnyChange' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table4
set AnyChange =(select count(*) 
					from anyCh c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table4.id);

-- insert into testtime values (2,'AnyChange' , CURRENT_TIMESTAMP);

truncate table anyCh;
truncate table cptRootLevel_table5;

-- insert into testtime values (1,'cptRootLevel_table5' , CURRENT_TIMESTAMP);
insert into cptRootLevel_table5 
values ( 138875005, 'SNOMED CT Concept (SNOMED RT+CTV3)' , cast(0 as decimal(5,2)) , cast(0 as decimal(5,2)) 
,cast(0 as decimal(5,2)) , cast(0 as decimal(5,2)) ,cast(0 as decimal(5,2)) 
,cast(0 as decimal(5,2)) ,cast(0 as decimal(5,2)) );

-- insert into testtime values (2,'cptRootLevel_table5' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'cptRootLevel_table5 fields update' , CURRENT_TIMESTAMP);

if totCpt>0 then

Update cptRootLevel_table5
set PercOfStatedDefChange=convert(100, decimal(16,2)) * statedCh / totCpt;

Update cptRootLevel_table5
set PercOfInferredDefChange=convert(100, decimal(16,2)) * inferredCh / totCpt;

Update cptRootLevel_table5
set PercOfPrimitive2SD =convert(100, decimal(16,2)) * vprim2SD / totCpt;

Update cptRootLevel_table5
set PercOfSD2Primitive = convert(100, decimal(16,2)) * vSD2Prim / totCpt;

Update cptRootLevel_table5
set PercOfDescriptionChange = convert(100, decimal(16,2)) * descrCh / totCpt;

Update cptRootLevel_table5
set PercOfFSNChange = convert(100, decimal(16,2)) * vFsnCh / totCpt;


Update cptRootLevel_table5
set PercOfAnyChange = convert(100, decimal(16,2)) * vAnyCh / totCpt;

end if;

-- insert into testtime values (2,'cptRootLevel_table5 fields update' , CURRENT_TIMESTAMP);
truncate table cptFirstLevel_table5;

-- insert into testtime values (1,'cptFirstLevel_table5' , CURRENT_TIMESTAMP);

insert into cptFirstLevel_table5 
select r.sourceId as id, r.term , cast(0 as decimal(5,2)) as PercOfAnyChange, cast(0 as decimal(5,2)) as PercOfStatedDefChange
,cast(0 as decimal(5,2)) as PercOfInferredDefChange, cast(0 as decimal(5,2)) as PercOfPrimitive2SD,cast(0 as decimal(5,2)) as PercOfSD2Primitive
,cast(0 as decimal(5,2)) as PercOfDescriptionChange,cast(0 as decimal(5,2)) as PercOfFSNChange 
from s_statedrootdesc r ;

-- insert into testtime values (2,'cptFirstLevel_table5' , CURRENT_TIMESTAMP);

-- insert into testtime values (1,'cptFirstLevel_table5  fields update' , CURRENT_TIMESTAMP);
Update cptFirstLevel_table5
set PercOfStatedDefChange=convert(100, decimal(16,2)) * (select StatedDefChange 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id) /(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);

Update cptFirstLevel_table5
set PercOfInferredDefChange =convert(100, decimal(16,2)) * (select InferredDefChange 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id) /(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);

Update cptFirstLevel_table5
set PercOfPrimitive2SD =convert(100, decimal(16,2)) * (select Primitive2SD 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id) /(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);

Update cptFirstLevel_table5
set PercOfSD2Primitive =convert(100, decimal(16,2)) * (select SD2Primitive 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id) /(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);
								

Update cptFirstLevel_table5
set PercOfDescriptionChange =convert(100, decimal(16,2)) * (select DescriptionChange 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id) /(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);

Update cptFirstLevel_table5
set PercOfFSNChange =convert(100, decimal(16,2)) * (select FSNChange 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id) /(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);


Update cptFirstLevel_table5
set PercOfAnyChange =convert(100, decimal(16,2)) * (select AnyChange 
					from cptFirstLevel_table4 c
					where c.id=cptFirstLevel_table5.id)/(select count(*) + 1 
					from s_tclosure_stated t 
					where t.ancestor=cptFirstLevel_table5.id);

-- insert into testtime values (2,'cptFirstLevel_table5  fields update' , CURRENT_TIMESTAMP);

END
