drop procedure if exists getChangedConceptDetails;

CREATE PROCEDURE getChangedConceptDetails()
 MODIFIES SQL DATA DYNAMIC RESULT SETS 1
 BEGIN ATOMIC
 
 DECLARE result CURSOR WITH RETURN FOR SELECT * FROM cpttable4_details FOR READ ONLY;


truncate table cpttable4_details;

insert into cpttable4_details
select distinct d2.term, r.id, d.term , ''
,'', '', ''
,'','' 
from anyCh r
inner join s_tclosure_stated t on t.descendant=r.id 
inner join s_statedrootdesc d2 on d2.sourceId=t.ancestor
left join s_descriptions d on d.conceptId=r.id
and d.active=1
and d.typeId=900000000000003001;


update cpttable4_details
set TERM= (select top 1 d.term from s_descriptions d 
			where d.conceptid=cpttable4_details.id
			and d.active=1)
			where cpttable4_details.term is null ;


update cpttable4_details set StatedDefChange=(case (select 'y' from statedChanges d where d.id=cpttable4_details.id) 
when 'y' then '1' else '0' end case);

update cpttable4_details set InferredDefChange=(case (select 'y' from inferredChanges d where d.id=cpttable4_details.id) 
when 'y' then '1' else '0' end case);

update cpttable4_details set Primitive2SD=(case (select 'y' from Prim2SD d where d.id=cpttable4_details.id) 
when 'y' then '1' else '0' end case);

update cpttable4_details set SD2Primitive=(case (select 'y' from SD2Prim d where d.id=cpttable4_details.id) 
when 'y' then '1' else '0' end case);

update cpttable4_details set DescriptionChange=(case (select 'y' from descCh d where d.id=cpttable4_details.id) 
when 'y' then '1' else '0' end case);

update cpttable4_details set FSNChange=(case (select 'y' from fsnCh d where d.id=cpttable4_details.id) 
when 'y' then '1' else '0' end case);


open result;

END
