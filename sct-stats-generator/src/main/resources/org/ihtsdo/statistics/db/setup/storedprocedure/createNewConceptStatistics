drop procedure if exists createNewConceptStatistics;

CREATE PROCEDURE createNewConceptStatistics()
 MODIFIES SQL DATA
 BEGIN ATOMIC
 declare totCpt INTEGER;
 declare newCpts INTEGER;
 
select count(*) into totCpt
from s_concepts c;

truncate table newConcepts;

insert into newConcepts 
select c.id ,c.active, c.definitionStatusId
from s_concepts c
where not exists (
	select 0 
	from s_concepts_pre pc
	where pc.id=c.id) ;



select count(*) 
into newCpts
from newConcepts;


truncate table cptRootLevel_table2;

insert into cptRootLevel_table2 
values ( 138875005, 'SNOMED CT Concept (SNOMED RT+CTV3)'  , cast(0 as integer) , cast(0 as decimal(5,2)) 
,cast(0 as decimal(5,2)) , cast(0 as decimal(5,2)) ,cast(0 as decimal(5,2)) );


Update cptRootLevel_table2 
set NewConcepts=newCpts ;


if totCpt>0 then

Update cptRootLevel_table2 
set PercentOfTotal=(convert(100, decimal(16,2)) * newCpts/totCpt);

end if;

Update cptRootLevel_table2 
set PercentOfAllNew=100;

if newCpts>0 then

Update cptRootLevel_table2 
set PercentOfNewSD=convert(100, decimal(16,2)) *(select count(*)
					from newConcepts c 
					where c.definitionStatusId=900000000000073002)/newCpts ;



Update cptRootLevel_table2 
set PercentOfNewP=convert(100, decimal(16,2)) - PercentOfNewSD ;

end if;

truncate table cptFirstLevel_table2;

insert into cptFirstLevel_table2 
select r.sourceId as id, r.term , cast(0 as integer) as NewConcepts, cast(0 as decimal(5,2)) as PercentOfHierarchy
,cast(0 as decimal(5,2)) as PercentOfAllNew, cast(0 as decimal(5,2)) as PercentOfNewSD,cast(0 as decimal(5,2)) as PercentOfNewP
from s_statedrootdesc r ;


Update cptFirstLevel_table2 
set NewConcepts=(select count(*) 
				from newConcepts c
				inner join s_tclosure_stated t 
				on t.descendant=c.id
				where t.ancestor=cptFirstLevel_table2.id);



if newCpts>0 then

Update cptFirstLevel_table2 
set PercentOfHierarchy=(convert(100, decimal(16,2)) * NewConcepts/(select count(*) + 1 
				from s_tclosure_stated t 
				where t.ancestor=cptFirstLevel_table2.id));



Update cptFirstLevel_table2 
set PercentOfAllNew=(convert(100, decimal(16,2)) * NewConcepts/newCpts);

Update cptFirstLevel_table2 
set PercentOfNewSD=(convert(100, decimal(16,2)) *(select count(*) 
					from newConcepts c
					inner join s_tclosure_stated t 
					on t.descendant=c.id
					where t.ancestor=cptFirstLevel_table2.id
					and c.definitionStatusId=900000000000073002)/NewConcepts)
					where NewConcepts>0;



Update cptFirstLevel_table2 
set PercentOfNewP=convert(100, decimal(16,2)) - PercentOfNewSD;
					

end if;

END
